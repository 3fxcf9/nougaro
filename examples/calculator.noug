# a simple Reverse Polish Notation calculator

print()
print("Welcome to the Nougaro calculator!")
print("This calculator uses the Reverse Polish Notation.")
print("Examples:")
print()
print("  1 + 1 will be 1 1 +")
print("  1 ^ 3 will be 1 3 ^")
print("  (1 + 1) * (12 + 13) will be 1 1 + 12 13 + *")
print()

while True then
    var calcul = input("calc> ")
    var should_continue = False
    
    if calcul == "exit" then break
    
    # tokenize
    var tokens = []
    for char in calcul then
        var current_tok = char
        if char in "0123456789" then
            if len(tokens) != 0 and not is_int(tokens(-1)) then
                append(tokens, int(char))
            elif len(tokens) != 0 then
                replace(tokens, -1, tokens(-1)*10 + int(char))
            else
                append(tokens, int(char))
            end
        elif char == " " then
            append(tokens, "space")
        elif char in "+-*/^" then
            append(tokens, char)
        else
            print("Error: illegal char " + char)
            var should_continue = True
            break
        end
    end
        
    if should_continue then continue
    
    # parse
    var stack = []
    for token in tokens then
        if is_int(token) then
            append(stack, token)
        elif token == "space" then
            void()
        else
            if token == "+" then
                var result = stack(-2) + stack(-1)
            elif token == "-" then
                var result = stack(-2) - stack(-1)
            elif token == '/' then
                if len(stack) != 0 and stack(-1) == 0 then
                    print("Error: can not divide by 0")
                    var should_continue = True
                    break
                end
                var result = stack(-2) / stack(-1)
            elif token == "*" then
                var result = stack(-2) * stack(-1)
            elif token == "^" then
                var result = stack(-2) ^ stack(-1)
            else
                print("Error")
                var should_continue = True
                break
            end
            pop(stack, -1)
            pop(stack, -1)
            append(stack, result)
        end
    end
    
    if should_continue then continue
    
    if len(stack) != 1 then
        print("Error: more than one result after execution, consider check your input.")
        continue
    end
    
    print(stack(0))
end
