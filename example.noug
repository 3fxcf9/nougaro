# This file was made in nougaro alpha 0.7 version.
import math
import statistics
import time

# This is a comment
# Basics :
# Print
print("Hello, world!")
print()

# Mathematical operators
print(1+1)
print(3-4)
print(2*3)
print(6/2)
print(3^2)
print(math_abs(-5))
print()

# Variables
var some_text = "Hello, world!"
var a = var b = 3
print(some_text); print(a * b)
print("You use nougaro version " + __noug_version__)
print("You use " + __os_name__ + " " + __os_release__ + " " + __os_version__)
print(None)
print(var b === 3)
print(var b <== 3)
print(var b <<= 3)
print(var b >== 3)
print(var b >>= 3)
print()

# Strings
print("this is a string quoted by \".")
print("You can put\nbacklines and\n\ttabs.")
print("You can add \\ backslashes and \" \' quotes")

print("You can add up and multiply strings: " + 3*some_text)
print()

# assert
assert True
# assert False, "you can also put an error message"  # Uncomment this line to see what happens

# Tests
var name = input("Whats your name? ")
if name == "Jean Dubois" then
    print("You are the creator of this language! Amazing!")
elif name != "mrlulu51" then
    print("You aren't MrLulu...")
else
    print("You are MrLulu!")
end
print()

print(1<2)
print(1>2)
print(12>=12)
print(13<=12)
print()

print(True and False)
print(True or False)
print(True xor False)
print(not True)
print()

# example functions
example('ppap')
print()

# Functions
def fib(n)
    # calculates all the numbers of the fibonacci list less than n
    var a = 0; var b = 1
    var return_list = []
    if is_int(n) or is_float(n) then
        while a < n then
            print(a)
            var return_list += a
            var c = a
            var a = b
            var b += c
        end
        return return_list
    else
        print("first argument must be an int!")
        return None
	end
end

print(fib(input_int("Enter number: ")))
print()

var a = def()->print("Hello, world!")
a()
print()

# builtin functions and lists
var a = print_ret("this string is printed and returned into a")
print("type(a) is " + type(a))  # str
print("is_str(a) is " + str(is_str(a)))  # True
print("is_list(a) is " + str(is_list(a)))  # False
print("is_func(is_func) is " + str(is_func(is_func)))  # True
print("is_list(a) is " + str(is_list(a)))  # False
print()

print(str(123))  # "123"
print(int("123"))  # 123
print(float("123.456")) # 123.456
print(list("abc"))  # ["a", "b", "c"]
print()

var list_ = [1, 2, 3, "4", '5', '6']

print(append(list_, 7))
print(var list_ += 7)
print()

print(pop(list_, -1))
print(var list_ -= -1)
print()

print(extend(list_, [8, 9, 10]))
print(list_ * [8, 9, 10])
print()

print(get(list_, -3))
print(list_ / -3)
print(list_(-3))
print(get(*[list_, -3]))  # another syntax. *[list_, -3] returns list_, -3 in this case.
print()

print("max of the list is " + str(max(list_, True)))
print("min of the list is " + str(min(list_, True)))
print("scope of the list is " + str(statistics_scope([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])))  # 10-1 = 9 :)
print()

void()  # Does ABSOLUTELY nothing... (in fact, returns None...)

# math functions
print(math_sqrt(math_pi) == math_sqrt_pi)  # True
print(math_root(27, 3))  # returns x with x^3 = 27, so 3
print(math_degrees(12))  # radians -> degrees
print(math_radians(math_degrees(12)))  # 12 :)
# math_sin, math_cos, math_tan, math_asin, math_acos, math_atan...
print(math_e)  # euler's number
print()

# loops
for i = 1 to 10 then
    print(i)
end
# it prints 1, 2, 3, 4, 5, 6, 7, 8, 9
print()

for i = 1 to 10 step 2 then
    print(i)
end
# it prints 1, 3, 5, 7, 9
print()

for i in list_ then
    print(i)
end
# it prints all the elements of list_
print()

var _ = 0
do
    print(_)
	if _ == 9 then; var _ += 2; continue; end
	var _ += 1
then loop while _ != 20
print()

# variable deletion
var a = 1
print(a)
del a
print()

# write into a file
var file = 'example_file'

write "Use '!>>' to overwrite :)" !>> file
write "\nHello world!" >> file  # use \n to make a new line.
write "Wow, that is at line 6" >> file 6
print("Write into a file does not prints anything - except in shell mode.")
print("Or you can do `print(write 'str' >> 'file')` ^^")
print()

# read files
print(read file)
print()

# time sleep
print("wait a second...")
time_sleep(1)
print("thank you :)")
print()
